--drop table anneramirez.ea_sf_associatemembers;
--create table anneramirez.ea_sf_associatemembers as
SELECT 
c.vanid,
null::varchar(100) as accountid,
null::varchar(100) as contactid,
(case when c.title in (select sf_title from anneramirez.ea_sf_titles) then c.title else null end) as title, 
c.firstname,
c.middlename,
c.lastname,
(case when upper(c.suffix) in (select upper(sf_suffix) from anneramirez.ea_sf_suffix) then c.suffix else null end) as suffix,
(case when coalesce(addr.addressline1,addr.vaddress) IS NOT NULL THEN 'H' ELSE null END) as address_type,
coalesce(addr.addressline1,addr.vaddress) as addressline1,
(case when addr.addressline1 IS NOT NULL and length(addr.addressline2)>0 THEN addr.addressline2 else null end) as addressline2,
addr.city as city,
coalesce(addr.state,addr.provincename) as state_province, 
coalesce(addr.zip5,addr.postalcode) as zip_postal,
addr.zip4,
ct.countrycode,
em.email,
ph.phone,
ph.phonetypeid,
act.action_id,
to_char(act.startdate, 'YYYYMMDD') as membership_start_date,
to_char(add_months(act.startdate,12), 'YYYYMMDD') as membership_end_date

 
/* *** SOURCE TABLES *** */
FROM 
(select distinct vanid, coalesce(datecanvassed::date,datecreated::date) as startdate, datecreated::date, surveyresponseid, contactssurveyresponseid as action_id
 from (select *, row_number () over (partition by vanid order by datecanvassed desc, datecreated desc) as rownum from vansync.ppfa_contactssurveyresponses_mym where surveyquestionid=203938 and datecanvassed::date<=current_date) 
                  where rownum=1 and surveyresponseid=860301
) act

inner join (select * from vansync.ppfa_contacts_mym_cont where personcommitteeid=11607
) c using (vanid)

inner JOIN (select
           vanid,
           ca.vaddress,
           ca.provincename,
           ca.postalcode,
           ca.countrycode,
           (case when cof.datecreated>ca.datecreated then cof.addressline1 else ca.addressline1 end) as addressline1,
           (case when cof.datecreated>ca.datecreated then cof.addressline2 else ca.addressline2 end) as addressline2,
           (case when cof.datecreated>ca.datecreated then cof.city else ca.city end) as city,
           (case when cof.datecreated>ca.datecreated then cof.state else ca.state end) as state,
           (case when cof.datecreated>ca.datecreated then cof.zip5 else ca.zip5 end) as zip5,
           (case when cof.datecreated>ca.datecreated then cof.zip4 else ca.zip4 end) as zip4
           from
				(SELECT DISTINCT
             *
             FROM (SELECT
               *,
               row_number ()
               OVER (PARTITION BY vanid ORDER BY datecreated desc, contactsaddressid DESC) as rownum
               FROM vansync.ppfa_contactsaddresses_mym
			   where coalesce(vaddress,addressline1) is not null
         and length(coalesce(vaddress,addressline1))>3
			   and city is not null
			   and coalesce(state,provincename) is not null
			   and coalesce(zip5,postalcode) is not null
         and datesuppressed is null
			   					) a
             WHERE rownum=1
			) ca
      full outer join 
           (select distinct * from
            (select *, row_number() over (partition by vanid order by datecreated desc, contactsaddressid desc) as rownum
             from
      	(select 
         distinct a.datecreated, 
         a.vanid, 
         b.contactsaddressid, 
         b.addressline1,
         b.addressline2,
         b.city,
         coalesce(b.state,b.provincename) as state,
         coalesce(b.zip5,b.postalcode) as zip5, 
         b.zip4
 				from
 					(select distinct * 
  				from
  					(select *, row_number () over (partition by vanid order by datecreated desc, contactsonlineformid desc) as rownum 
   					from vansync.ppfa_contactsonlineforms_mym
   					where submittedaddressline1 is not null
             and length(submittedaddressline1)>3
             and submittedcity is not null
             and submittedpostalcode is not null
        		) where rownum=1
    			) a
				left join vansync.ppfa_contactsaddresses_mym b on a.vanid=b.vanid
				where upper(left(a.submittedaddressline1,5)) ilike upper(left(b.addressline1,5))
				and b.datesuppressed is null
         --and a.datecreated>=b.datecreated
				))
            where rownum=1) cof using(vanid)
) addr USING (vanid)
           --so: addresses on contactsonlineforms are not formatted. so we want to compare the date of the most recent form submission with full address info, to the date of the most recent address created on the record, and pull the most recent one - BUT if it's the onlineforms address, match it back to the address on the record and pull the properly formatted one. also we don't actually have datecreated on the contactsaddress table right now so i set 6mos as an arbitrary time period

LEFT JOIN (SELECT DISTINCT
             *
             FROM (SELECT
               *,
               row_number ()
               OVER (PARTITION BY vanid ORDER BY preferredemail desc, datecreated desc, contactsemailid desc) as rownum
               FROM vansync.ppfa_contactsemails_mym
			   where datesuppressed is null) a
             WHERE rownum=1
) em USING (vanid)
LEFT JOIN (SELECT DISTINCT
             *
             FROM (SELECT
               *,
               row_number ()
               OVER (PARTITION BY vanid ORDER BY preferredphone desc,datecreated desc, contactsphoneid desc) as rownum
               FROM vansync.ppfa_contactsphones_mym
			   where datesuppressed is null
			   and phonetypeid='H') a
             WHERE rownum=1
) ph USING (vanid)
left join anneramirez.ea_sf_countrycodes ct on ct.ea_countrycode=addr.countrycode
where act.datecreated = CONVERT_TIMEZONE('US/Eastern', getdate())::date-1